{"data":{"site":{"siteMetadata":{"title":"Kevin Wilde","author":"Kevin Wilde"}},"markdownRemark":{"id":"9b9c29c3-3a00-52fc-ab58-8e576ebc030a","excerpt":"In December 2020, I presented a workshop at Reactathon in which we implemented a two static type systems — the first relied on type annotations by the…","html":"<p>In December 2020, I presented a workshop at Reactathon in which we implemented a two static type systems — the first relied on type annotations by the programmer (i.e. <code class=\"language-text\">x: int</code> or <code class=\"language-text\">y: string</code>), and the second was capable of full type inference.</p>\n<p>The GitHub repository for the workshop is located at <a href=\"https://github.com/kevinwilde/type-system-workshop\">https://github.com/kevinwilde/type-system-workshop</a>.</p>\n\n          <div\n            class=\"gatsby-resp-iframe-wrapper\"\n            style=\"padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden;margin-bottom: 1.0725rem\"\n          >\n            <iframe src=\"https://www.youtube.com/embed/6lJ5mjNGynk\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen style=\"\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n          \"></iframe>\n          </div>\n          ","frontmatter":{"title":"Implementing a Type System","description":""}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/implementing-a-type-system/","previous":{"fields":{"slug":"/enforcing-correlated-types/"},"frontmatter":{"title":"Enforcing Correlated Types"}},"next":null}}
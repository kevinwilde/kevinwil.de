{"data":{"site":{"siteMetadata":{"title":"Kevin Wilde","author":"Kevin Wilde"}},"markdownRemark":{"id":"11796ab2-60a6-5c77-a13c-e5bfaf7a9deb","excerpt":"At Course Hero, we aren’t yet using a CSS-in-JS library. Instead, we have a css framework that is largely based on Bootstrap 4. While CSS-in-JS libraries…","html":"<p>At Course Hero, we aren’t yet using a CSS-in-JS library. Instead, we have a css framework that is largely based on Bootstrap 4. While CSS-in-JS libraries provide <a href=\"https://www.styled-components.com/docs/basics#motivation\">many benefits</a> over external stylesheets, and we may eventually use CSS-in-JS, for now our css framework is serving us well.</p>\n<p>One benefit our css framework gives us is more consistent styling, in a way that might be more difficult to enforce if we used CSS-in-JS. For example, when we need some margin around an element, the intent is that the developer should only ever use one of the margin classes from our css framework, rather than writing an arbitrary margin rule. This has greatly improved the design consistency on our pages. Previously, it was not uncommon to see some element that has a margin of 47px or some other seemingly random number.</p>\n<p>Although there are clear differences between using our css framework and using CSS-in-JS, I actually find the authoring experience quite similar. Since our css framework has utility classes for all the common css rules, using those classes inside a component has a similar feel to writing your styles directly in the component as you might do with CSS-in-JS. For example, with <a href=\"https://emotion.sh/docs/introduction\">Emotion</a></p>","frontmatter":{"title":"ClassNamed Components","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/styled-components/","previous":{"fields":{"slug":"/hi-folks/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}